statement: "QUERY" querytype "WHERE" fullcondition+

querytype: "MS1DATA"
     | "MS2DATA"
     | function"(MS1DATA)"
     | function"(MS2DATA)"
     | function"(MS1DATA," param "=" floating ")"

fullcondition: fullcondition booleanconjunction fullcondition
    | condition ":" qualifier
    | condition

condition: conditionfields "=" floating
    | conditionfields "=" STRING
    | conditionfields "=" "(" statement ")"
    | conditionfields "=" "(" statement ")"

qualifier: qualifier ":" qualifier
    | qualifierfields equal floating
    | qualifierfields equal STRING
    | qualifierfields greaterthan floating
    | qualifierfields greaterthan STRING
    | qualifierfields lessthan floating
    | qualifierfields lessthan STRING
    | booleanconjunction qualifierfields equal floating
    | booleanconjunction qualifierfields equal STRING
    | booleanconjunction qualifierfields equal floating
    | booleanconjunction qualifierfields equal STRING
    | booleanconjunction qualifierfields lessthan floating
    | booleanconjunction qualifierfields lessthan STRING

equal: "="
lessthan: "<"
greaterthan: ">"

conditionfields: ms2productcondition
    | ms2precursorcondition
    | ms2neutrallosscondition
    | ms1mzcondition

ms2productcondition: "MS2PROD"
ms2precursorcondition: "MS2PREC"
ms2neutrallosscondition: "MS2NL"
ms1mzcondition: "MS1MZ"

qualifierfields: qualifiermzdelta
    | qualifierppmdelta
    | qualifierintensitypercent
    | qualifierintensityvalue

qualifiermzdelta: "MZDELTA" 
qualifierppmdelta: "PPMDELTA"
qualifierintensitypercent: "INTENSITYPERCENT"
qualifierintensityvalue: "INTENSITYVALUE"

function: "scanrangesum"
    | "scansum"
    | "scanmz"

booleanconjunction: "AND"

param: "TOLERANCE"
floating: /[-+]?([0-9]*\.[0-9]+|[0-9]+)/

%import common.ESCAPED_STRING   -> STRING
%import common.SIGNED_NUMBER    -> NUMBER
%import common.WS
%ignore WS